0a1,24
> '('
> '*'
> THEN
> TYPEID Game
> OF
> TYPEID Life
> LET
> TYPEID Tendo
> TYPEID Kayiira
> ','
> TYPEID Summer
> LEXER BUG - UNMATCHED: '
> INT_CONST 95
> LET
> TYPEID With
> OBJECTID code
> OBJECTID taken
> IF
> OBJECTID rom
> '/'
> OBJECTID private
> '/'
> OBJECTID cool
> '/'
2c26,425
< TYPEID Board
---
> '/'
> OBJECTID examples
> '/'
> OBJECTID cells
> '.'
> OBJECTID cl
> TYPEID This
> FI
> OBJECTID ntroduction
> OBJECTID was
> OBJECTID taken
> OBJECTID off
> THEN
> OBJECTID internet
> '.'
> FI
> OBJECTID t
> OBJECTID gives
> OBJECTID a
> OBJECTID brief
> OBJECTID description
> OF
> THEN
> TYPEID Game
> OF
> TYPEID Life
> '.'
> FI
> OBJECTID t
> OBJECTID also
> OBJECTID gives
> THEN
> OBJECTID rules
> OBJECTID by
> OBJECTID which
> OBJECTID this
> OBJECTID particular
> OBJECTID game
> IF
> OBJECTID ollows
> '.'
> TYPEID Introduction
> LET
> TYPEID John
> TYPEID Conway
> LEXER BUG - UNMATCHED: '
> OBJECTID s
> TYPEID Game
> OF
> TYPEID Life
> FI
> OBJECTID s
> OBJECTID a
> OBJECTID mathematical
> OBJECTID amusement
> ','
> OBJECTID but
> FI
> OBJECTID t
> LET
> OBJECTID is
> OBJECTID also
> OBJECTID much
> OBJECTID more
> ':'
> OBJECTID an
> FI
> OBJECTID nsight
> FI
> OBJECTID nto
> OBJECTID how
> OBJECTID a
> OBJECTID system
> OF
> OBJECTID simple
> ESAC
> OBJECTID ellualar
> OBJECTID automata
> OBJECTID can
> OBJECTID create
> OBJECTID complex
> ','
> OBJECTID odd
> ','
> OBJECTID and
> OBJECTID often
> OBJECTID aesthetically
> LOOP
> OBJECTID leasing
> OBJECTID patterns
> '.'
> FI
> OBJECTID t
> FI
> OBJECTID s
> OBJECTID played
> OBJECTID on
> OBJECTID a
> OBJECTID cartesian
> OBJECTID grid
> OF
> OBJECTID cells
> LET
> OBJECTID which
> OBJECTID are
> OBJECTID either
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> OBJECTID or
> LEXER BUG - UNMATCHED: '
> OBJECTID off
> LEXER BUG - UNMATCHED: '
> THEN
> OBJECTID game
> OBJECTID gets
> FI
> OBJECTID t
> LEXER BUG - UNMATCHED: '
> OBJECTID s
> IN
> OBJECTID ame
> IF
> OBJECTID rom
> THEN
> LET
> OBJECTID similarity
> OBJECTID between
> THEN
> OBJECTID behaviour
> OF
> OBJECTID these
> OBJECTID cells
> OBJECTID and
> THEN
> OBJECTID behaviour
> LET
> OF
> OBJECTID living
> OBJECTID organisms
> '.'
> THEN
> TYPEID Rules
> LET
> OBJECTID he
> OBJECTID playfield
> FI
> OBJECTID s
> OBJECTID a
> OBJECTID cartesian
> OBJECTID grid
> OF
> OBJECTID arbitrary
> OBJECTID size
> '.'
> TYPEID Each
> OBJECTID cell
> FI
> OBJECTID n
> LET
> OBJECTID his
> OBJECTID grid
> OBJECTID can
> OBJECTID be
> FI
> OBJECTID n
> OBJECTID an
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> OBJECTID state
> OBJECTID or
> OBJECTID an
> LEXER BUG - UNMATCHED: '
> OBJECTID off
> LEXER BUG - UNMATCHED: '
> OBJECTID state
> '.'
> TYPEID On
> OBJECTID each
> LEXER BUG - UNMATCHED: '
> OBJECTID turn
> LEXER BUG - UNMATCHED: '
> FI
> '('
> OBJECTID called
> OBJECTID a
> OBJECTID generation
> ','
> ')'
> THEN
> OBJECTID state
> OF
> OBJECTID each
> OBJECTID cell
> OBJECTID changes
> OBJECTID simultaneously
> FI
> OBJECTID depending
> OBJECTID on
> FI
> OBJECTID t
> LEXER BUG - UNMATCHED: '
> OBJECTID s
> OBJECTID state
> OBJECTID and
> THEN
> OBJECTID state
> OF
> OBJECTID all
> OBJECTID cells
> OBJECTID adjacent
> OBJECTID to
> FI
> OBJECTID t
> '.'
> LET
> TYPEID For
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> OBJECTID cells
> ','
> CLASS
> FI
> FI
> THEN
> OBJECTID cell
> OBJECTID has
> INT_CONST 0
> OBJECTID or
> INT_CONST 1
> IN
> OBJECTID eighbours
> OBJECTID which
> OBJECTID are
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> ','
> THEN
> OBJECTID cell
> OBJECTID turns
> INHERITS
> LEXER BUG - UNMATCHED: '
> OBJECTID off
> LEXER BUG - UNMATCHED: '
> '.'
> '('
> LEXER BUG - UNMATCHED: '
> OBJECTID dies
> OF
> OBJECTID loneliness
> LEXER BUG - UNMATCHED: '
> ')'
> CLASS
> FI
> FI
> THEN
> OBJECTID cell
> OBJECTID has
> INT_CONST 2
> OBJECTID or
> INT_CONST 3
> IN
> OBJECTID eighbours
> OBJECTID which
> OBJECTID are
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> ','
> THEN
> OBJECTID cell
> OBJECTID stays
> INHERITS
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> '.'
> '('
> OBJECTID nothing
> OBJECTID happens
> OBJECTID to
> OBJECTID that
> OBJECTID cell
> ')'
> CLASS
> FI
> FI
> THEN
> OBJECTID cell
> OBJECTID has
> INT_CONST 4
> ','
> INT_CONST 5
> ','
> INT_CONST 6
> ','
> INT_CONST 7
> ','
> INT_CONST 8
> ','
> OBJECTID or
> INT_CONST 9
> IN
> OBJECTID eighbours
> OBJECTID which
> OBJECTID are
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> ','
> INHERITS
> THEN
> OBJECTID cell
> OBJECTID turns
> LEXER BUG - UNMATCHED: '
> OBJECTID off
> LEXER BUG - UNMATCHED: '
> '.'
> '('
> LEXER BUG - UNMATCHED: '
> OBJECTID dies
> OF
> OBJECTID overcrowding
> LEXER BUG - UNMATCHED: '
> ')'
> LET
> TYPEID For
> LEXER BUG - UNMATCHED: '
> OBJECTID off
> LEXER BUG - UNMATCHED: '
> OBJECTID cells
> ','
> CLASS
> FI
> FI
> THEN
> OBJECTID cell
> OBJECTID has
> INT_CONST 0
> ','
> INT_CONST 1
> ','
> INT_CONST 2
> ','
> INT_CONST 4
> ','
> INT_CONST 5
> ','
> INT_CONST 6
> ','
> INT_CONST 7
> ','
> INT_CONST 8
> ','
> OBJECTID or
> INT_CONST 9
> IN
> OBJECTID eighbours
> OBJECTID which
> INHERITS
> OBJECTID are
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> ','
> THEN
> OBJECTID cell
> OBJECTID stays
> LEXER BUG - UNMATCHED: '
> OBJECTID off
> LEXER BUG - UNMATCHED: '
> '.'
> '('
> OBJECTID nothing
> OBJECTID happens
> OBJECTID to
> OBJECTID that
> OBJECTID cell
> ')'
> CLASS
> FI
> FI
> THEN
> OBJECTID cell
> OBJECTID has
> INT_CONST 3
> IN
> OBJECTID eighbours
> OBJECTID which
> OBJECTID are
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> ','
> THEN
> OBJECTID cell
> OBJECTID turns
4c427,466
< TYPEID IO
---
> LEXER BUG - UNMATCHED: '
> OBJECTID on
> LEXER BUG - UNMATCHED: '
> '.'
> '('
> INT_CONST 3
> IN
> OBJECTID eighbouring
> LEXER BUG - UNMATCHED: '
> OBJECTID alive
> LEXER BUG - UNMATCHED: '
> OBJECTID cells
> LEXER BUG - UNMATCHED: '
> OBJECTID give
> OBJECTID birth
> LEXER BUG - UNMATCHED: '
> OBJECTID to
> OBJECTID a
> IF
> OBJECTID ourth
> '.'
> ')'
> LET
> TYPEID Repeat
> IF
> OBJECTID or
> CASE
> OBJECTID many
> OBJECTID generations
> CASE
> OBJECTID desired
> '.'
> '*'
> ')'
> CLASS
> TYPEID Board
> FI
> OBJECTID nherits
> FI
> OF
8c470,471
< TYPEID Int
---
> FI
> OBJECTID nt
12c475,476
< TYPEID Int
---
> FI
> OBJECTID nt
14c478,480
< OBJECTID board_size
---
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
16c482,483
< TYPEID Int
---
> FI
> OBJECTID nt
18c485,489
< OBJECTID size_of_board
---
> OBJECTID size
> LEXER BUG - UNMATCHED: _
> OF
> LEXER BUG - UNMATCHED: _
> OBJECTID board
25c496,497
< TYPEID Int
---
> FI
> OBJECTID nt
26a499
> LET
34c507,509
< OBJECTID board_init
---
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID init
42a518
> LET
47a524
> FI
49c526,530
< OBJECTID size_of_board
---
> OBJECTID size
> LEXER BUG - UNMATCHED: _
> OF
> LEXER BUG - UNMATCHED: _
> OBJECTID board
53c534,536
< IN
---
> FI
> OBJECTID n
> ELSE
60a544
> FI
64a549
> FI
69c554,557
< OBJECTID board_size
---
> FI
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
75c563,564
< IF
---
> FI
> FI
79a569
> FI
80a571
> FI
84a576
> FI
89c581,584
< OBJECTID board_size
---
> FI
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
95c590,591
< IF
---
> FI
> FI
100a597
> FI
104a602
> FI
109c607,610
< OBJECTID board_size
---
> FI
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
115c616,617
< IF
---
> FI
> FI
120a623
> FI
124a628
> FI
129c633,636
< OBJECTID board_size
---
> FI
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
135c642,643
< IF
---
> FI
> FI
140a649
> FI
144a654
> FI
149c659,662
< OBJECTID board_size
---
> FI
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
155c668,669
< IF
---
> FI
> FI
160a675
> FI
164a680
> FI
169c685,688
< OBJECTID board_size
---
> FI
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
174a694,707
> '-'
> '-'
> FI
> FI
> OBJECTID none
> OF
> THEN
> OBJECTID above
> IF
> OBJECTID it
> ','
> THEN
> OBJECTID just
> OBJECTID give
175a709,719
> FI
> '-'
> '-'
> THEN
> OBJECTID configuration
> OF
> THEN
> OBJECTID most
> OBJECTID common
> OBJECTID board
> FI
179a724
> FI
184c729,732
< OBJECTID board_size
---
> FI
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
189a738,739
> IF
> IF
190a741,742
> IF
> IF
192,194c744,745
< FI
< FI
< FI
---
> IF
> OBJECTID i
197a749
> ELSE
198a751
> LET
206c759,760
< INHERITS
---
> FI
> OBJECTID nherits
209c763,766
< OBJECTID population_map
---
> ELSE
> OBJECTID population
> LEXER BUG - UNMATCHED: _
> OBJECTID map
212a770,771
> LET
> ELSE
221a781
> INHERITS
223c783,787
< OBJECTID population_map
---
> INHERITS
> ELSE
> OBJECTID population
> LEXER BUG - UNMATCHED: _
> OBJECTID map
227c791,794
< OBJECTID board_init
---
> ELSE
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID init
232c799,801
< OBJECTID self
---
> INHERITS
> CLASS
> OBJECTID elf
233a803
> INHERITS
234a805
> ELSE
236a808,809
> LET
> ELSE
242a816
> INHERITS
245c819
< OBJECTID i
---
> FI
247c821,822
< TYPEID Int
---
> FI
> OBJECTID nt
250c825,826
< IN
---
> FI
> OBJECTID n
253c829,830
< OBJECTID num
---
> IN
> OBJECTID um
255c832,833
< TYPEID Int
---
> FI
> OBJECTID nt
257,258c835,839
< OBJECTID board_size
< IN
---
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
> FI
> OBJECTID n
260c841,843
< OBJECTID out_string
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
262c845
< STR_CONST "\n"
---
> STR_CONST "\\n"
266c849
< OBJECTID i
---
> FI
268c851,852
< OBJECTID num
---
> IN
> OBJECTID um
269a854,855
> INHERITS
> LET
271c857,860
< OBJECTID out_string
---
> ELSE
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
273c862,864
< OBJECTID population_map
---
> OBJECTID population
> LEXER BUG - UNMATCHED: _
> OBJECTID map
283,297c874,877
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< OBJECTID i
< ASSIGN
< OBJECTID i
< '+'
< OBJECTID columns
< ';'
< '}'
< POOL
< ';'
< OBJECTID out_string
---
> ELSE
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
299c879
< STR_CONST "\n"
---
> STR_CONST "\\n\"); \n\t    i <- i + columns;\n\t   }\n\t pool;\n \tout_string(\"\\n"
306a887
> ELSE
309c890,894
< OBJECTID num_cells
---
> LET
> ELSE
> OBJECTID num
> LEXER BUG - UNMATCHED: _
> OBJECTID cells
313c898,899
< TYPEID Int
---
> FI
> OBJECTID nt
315c901,904
< OBJECTID population_map
---
> INHERITS
> OBJECTID population
> LEXER BUG - UNMATCHED: _
> OBJECTID map
319a909
> ELSE
321a912,913
> LET
> ELSE
326c918,919
< TYPEID Int
---
> FI
> OBJECTID nt
332c925,927
< OBJECTID board_size
---
> OBJECTID board
> LEXER BUG - UNMATCHED: _
> OBJECTID size
340c935,938
< OBJECTID population_map
---
> INHERITS
> OBJECTID population
> LEXER BUG - UNMATCHED: _
> OBJECTID map
348a947
> ELSE
351c950,952
< OBJECTID north
---
> LET
> IN
> OBJECTID orth
355c956,957
< TYPEID Int
---
> FI
> OBJECTID nt
369,398c971,975
< STR_CONST " "
< ELSE
< OBJECTID cell
< '('
< OBJECTID position
< '-'
< OBJECTID columns
< ')'
< FI
< '}'
< ';'
< OBJECTID south
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID board_size
< '<'
< '('
< OBJECTID position
< '+'
< OBJECTID columns
< ')'
< THEN
< STR_CONST " "
---
> CLASS
> STR_CONST " \"\t                       \n\telse\n\t   cell(position - columns)\n\tfi\n };\n\n south(position : Int): String {\n\tif board_size < (position + columns) then\n\t      \" "
> INHERITS
> INHERITS
> CLASS
400c977,978
< OBJECTID cell
---
> ESAC
> OBJECTID ell
413c991,992
< TYPEID Int
---
> FI
> OBJECTID nt
439,464c1018,1019
< STR_CONST " "
< ELSE
< OBJECTID cell
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< FI
< '}'
< ';'
< OBJECTID west
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID position
< '='
< INT_CONST 0
< THEN
< STR_CONST " "
---
> CLASS
> STR_CONST " \"                \n\telse\n\t   cell(position + 1)\n\tfi \n };\n\n west(position : Int): String {\n\tif position = 0 then\n\t      \" "
465a1021
> LET
479,487c1035,1039
< STR_CONST " "
< ELSE
< OBJECTID cell
< '('
< OBJECTID position
< '-'
< INT_CONST 1
< ')'
< FI
---
> CLASS
> STR_CONST " \"\n\t   else\n\t      cell(position - 1)\n\tfi fi\n };\n\n northwest(position : Int): String {\n\tif (position - columns) < 0 then\n\t      \" "
> INHERITS
> INHERITS
> CLASS
489,509d1040
< '}'
< ';'
< OBJECTID northwest
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< '('
< OBJECTID position
< '-'
< OBJECTID columns
< ')'
< '<'
< INT_CONST 0
< THEN
< STR_CONST " "
510a1042
> FI
524c1056,1057
< STR_CONST " "
---
> CLASS
> STR_CONST " \"\n\t      else\n\t\tnorth(position - 1)\n\tfi fi\n };\n\n northeast(position : Int): String {\n\tif (position - columns) < 0 then\n\t      \" "
526,531d1058
< OBJECTID north
< '('
< OBJECTID position
< '-'
< INT_CONST 1
< ')'
534,556d1060
< '}'
< ';'
< OBJECTID northeast
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< '('
< OBJECTID position
< '-'
< OBJECTID columns
< ')'
< '<'
< INT_CONST 0
< THEN
< STR_CONST " "
< ELSE
< IF
577c1081,1085
< STR_CONST " "
---
> CLASS
> STR_CONST " \"     \n\t     else\n\t       north(position + 1)\n\tfi fi\n };\n\n southeast(position : Int): String {\n\tif board_size < (position + columns) then\n\t      \" "
> INHERITS
> INHERITS
> CLASS
579,584d1086
< OBJECTID north
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
587,609d1088
< '}'
< ';'
< OBJECTID southeast
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID board_size
< '<'
< '('
< OBJECTID position
< '+'
< OBJECTID columns
< ')'
< THEN
< STR_CONST " "
< ELSE
< IF
630c1109,1114
< STR_CONST " "
---
> CLASS
> FI
> STR_CONST " \"                \n\t     else\n\t       south(position + 1)\n\tfi fi\n };\n\n southwest(position : Int): String {\n\tif board_size < (position + columns) then\n\t      \" "
> INHERITS
> INHERITS
> CLASS
632,663c1116,1118
< OBJECTID south
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< FI
< FI
< '}'
< ';'
< OBJECTID southwest
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID board_size
< '<'
< '('
< OBJECTID position
< '+'
< OBJECTID columns
< ')'
< THEN
< STR_CONST " "
< ELSE
< IF
< '('
---
> FI
> IF
> '('
675,1219c1130,1147
< STR_CONST " "
< ELSE
< OBJECTID south
< '('
< OBJECTID position
< '-'
< INT_CONST 1
< ')'
< FI
< FI
< '}'
< ';'
< OBJECTID neighbors
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID Int
< '{'
< '{'
< IF
< OBJECTID north
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< '+'
< IF
< OBJECTID south
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< '+'
< IF
< OBJECTID east
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< '+'
< IF
< OBJECTID west
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< '+'
< IF
< OBJECTID northeast
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< '+'
< IF
< OBJECTID northwest
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< '+'
< IF
< OBJECTID southeast
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< '+'
< IF
< OBJECTID southwest
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< INT_CONST 1
< ELSE
< INT_CONST 0
< FI
< ';'
< '}'
< '}'
< ';'
< OBJECTID cell_at_next_evolution
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID neighbors
< '('
< OBJECTID position
< ')'
< '='
< INT_CONST 3
< THEN
< STR_CONST "X"
< ELSE
< IF
< OBJECTID neighbors
< '('
< OBJECTID position
< ')'
< '='
< INT_CONST 2
< THEN
< IF
< OBJECTID cell
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
< THEN
< STR_CONST "X"
< ELSE
< STR_CONST "-"
< FI
< ELSE
< STR_CONST "-"
< FI
< FI
< '}'
< ';'
< OBJECTID evolve
< '('
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '('
< LET
< OBJECTID position
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 0
< IN
< '('
< LET
< OBJECTID num
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID num_cells
< '('
< ')'
< IN
< '('
< LET
< OBJECTID temp
< ':'
< TYPEID String
< IN
< '{'
< WHILE
< OBJECTID position
< '<'
< OBJECTID num
< LOOP
< '{'
< OBJECTID temp
< ASSIGN
< OBJECTID temp
< '.'
< OBJECTID concat
< '('
< OBJECTID cell_at_next_evolution
< '('
< OBJECTID position
< ')'
< ')'
< ';'
< OBJECTID position
< ASSIGN
< OBJECTID position
< '+'
< INT_CONST 1
< ';'
< '}'
< POOL
< ';'
< OBJECTID population_map
< ASSIGN
< OBJECTID temp
< ';'
< OBJECTID self
< ';'
< '}'
< ')'
< ')'
< ')'
< '}'
< ';'
< OBJECTID option
< '('
< ')'
< ':'
< TYPEID String
< '{'
< '{'
< '('
< LET
< OBJECTID num
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID out_string
< '('
< STR_CONST "\nPlease chose a number:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t1: A cross\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t2: A slash from the upper left to lower right\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t3: A slash from the upper right to lower left\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t4: An X\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t5: A greater than sign \n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t6: A less than sign\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t7: Two greater than signs\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t8: Two less than signs\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t9: A 'V'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t10: An inverse 'V'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t11: Numbers 9 and 10 combined\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t12: A full grid\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t13: A 'T'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t14: A plus '+'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t15: A 'W'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t16: An 'M'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t17: An 'E'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t18: A '3'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t19: An 'O'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t20: An '8'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t21: An 'S'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Your choice => "
< ')'
< ';'
< OBJECTID num
< ASSIGN
< OBJECTID in_int
< '('
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< IF
< OBJECTID num
< '='
< INT_CONST 1
< THEN
< STR_CONST " XX  XXXX XXXX  XX  "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 2
< THEN
< STR_CONST "    X   X   X   X   X    "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 3
< THEN
< STR_CONST "X     X     X     X     X"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 4
< THEN
< STR_CONST "X   X X X   X   X X X   X"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 5
< THEN
< STR_CONST "X     X     X   X   X    "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 6
< THEN
< STR_CONST "    X   X   X     X     X"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 7
< THEN
< STR_CONST "X  X  X  XX  X      "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 8
< THEN
< STR_CONST " X  XX  X  X  X     "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 9
< THEN
< STR_CONST "X   X X X   X  "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 10
< THEN
< STR_CONST "  X   X X X   X"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 11
< THEN
< STR_CONST "X X X X X X X X"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 12
< THEN
< STR_CONST "XXXXXXXXXXXXXXXXXXXXXXXXX"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 13
< THEN
< STR_CONST "XXXXX  X    X    X    X  "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 14
< THEN
< STR_CONST "  X    X  XXXXX  X    X  "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 15
< THEN
< STR_CONST "X     X X X X   X X  "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 16
< THEN
< STR_CONST "  X X   X X X X     X"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 17
< THEN
< STR_CONST "XXXXX   X   XXXXX   X   XXXX"
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 18
< THEN
< STR_CONST "XXX    X   X  X    X   XXXX "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 19
< THEN
< STR_CONST " XX X  XX  X XX "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 20
< THEN
< STR_CONST " XX X  XX  X XX X  XX  X XX "
< ELSE
< IF
< OBJECTID num
< '='
< INT_CONST 21
< THEN
< STR_CONST " XXXX   X    XX    X   XXXX "
< ELSE
< STR_CONST "                         "
< FI
< FI
< FI
< FI
< FI
< FI
< FI
< FI
< FI
< FI
< FI
< FI
< FI
---
> CLASS
> STR_CONST " \"\n\t      else\n\t       south(position - 1)\n\tfi fi\n };\n\n neighbors(position: Int): Int { \n \t{\n\t     if north(position) = \"X\" then 1 else 0 fi\n\t     + if south(position) = \"X\" then 1 else 0 fi\n \t     + if east(position) = \"X\" then 1 else 0 fi\n \t     + if west(position) = \"X\" then 1 else 0 fi\n\t     + if northeast(position) = \"X\" then 1 else 0 fi\n\t     + if northwest(position) = \"X\" then 1 else 0 fi\n \t     + if southeast(position) = \"X\" then 1 else 0 fi\n\t     + if southwest(position) = \"X"
> THEN
> INT_CONST 1
> ELSE
> INT_CONST 0
> IF
> OBJECTID i
> ';'
> '}'
> '}'
> ';'
> '('
> '*'
> TYPEID A
> OBJECTID cell
> OBJECTID will
> OBJECTID live
1221a1150,1153
> INT_CONST 2
> OBJECTID or
> INT_CONST 3
> OF
1222a1155,1162
> OBJECTID t
> LEXER BUG - UNMATCHED: '
> OBJECTID s
> IN
> OBJECTID eighbors
> OBJECTID are
> OBJECTID alive
> '.'
1223a1164,1170
> OBJECTID t
> OBJECTID dies
> LET
> OBJECTID otherwise
> '.'
> TYPEID A
> OBJECTID cell
1224a1172,1173
> OBJECTID s
> OBJECTID born
1226a1176,1178
> OBJECTID only
> INT_CONST 3
> OF
1228,1229c1180,1188
< ';'
< '}'
---
> OBJECTID t
> LEXER BUG - UNMATCHED: '
> OBJECTID s
> IN
> OBJECTID eighbors
> OBJECTID are
> OBJECTID alive
> '.'
> '*'
1231,1235c1190,1198
< ';'
< '}'
< '}'
< ';'
< OBJECTID prompt
---
> ELSE
> ELSE
> OBJECTID cell
> LEXER BUG - UNMATCHED: _
> OBJECTID at
> LEXER BUG - UNMATCHED: _
> OBJECTID next
> LEXER BUG - UNMATCHED: _
> OBJECTID evolution
1237c1200
< ')'
---
> OBJECTID position
1239,1244c1202,1204
< TYPEID Bool
< '{'
< '{'
< '('
< LET
< OBJECTID ans
---
> FI
> OBJECTID nt
> ')'
1247d1206
< IN
1249,1265c1208,1210
< OBJECTID out_string
< '('
< STR_CONST "Would you like to continue with the next generation? \n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Please use lowercase y or n for your answer [y]: "
< ')'
< ';'
< OBJECTID ans
< ASSIGN
< OBJECTID in_string
< '('
< ')'
< ';'
< OBJECTID out_string
---
> IF
> IN
> OBJECTID eighbors
1267c1212
< STR_CONST "\n"
---
> OBJECTID position
1269,1271d1213
< ';'
< IF
< OBJECTID ans
1273c1215
< STR_CONST "n"
---
> INT_CONST 3
1275,1277c1217
< BOOL_CONST false
< ELSE
< BOOL_CONST true
---
> STR_CONST "X\"\n\telse\n\t   if neighbors(position) = 2 then\n\t\tif cell(position) = \"X\" then\n\t\t\t\"X\"\n\t\telse\n\t\t\t\"-\"\n\t        fi\n\t   else\n\t\t\"-"
1279,1283c1219,1221
< ';'
< '}'
< ')'
< ';'
< '}'
---
> IF
> OBJECTID i
> ELSE
1286c1224,1226
< OBJECTID prompt2
---
> FI
> WHILE
> OBJECTID volve
1290c1230
< TYPEID Bool
---
> TYPEID SELF_TYPE
1291a1232,1260
> INHERITS
> '('
> LET
> OBJECTID position
> ':'
> FI
> OBJECTID nt
> ASSIGN
> INT_CONST 0
> FI
> OBJECTID n
> INHERITS
> '('
> LET
> IN
> OBJECTID um
> ':'
> FI
> OBJECTID nt
> ASSIGN
> IN
> OBJECTID um
> LEXER BUG - UNMATCHED: _
> OBJECTID cells
> '('
> ')'
> FI
> OBJECTID n
> INHERITS
1294c1263
< OBJECTID ans
---
> OBJECTID temp
1296a1266,1275
> FI
> OBJECTID n
> INHERITS
> ELSE
> '{'
> INHERITS
> INHERITS
> WHILE
> OBJECTID position
> '<'
1297a1277,1281
> OBJECTID um
> LOOP
> INHERITS
> INHERITS
> ELSE
1299c1283,1290
< OBJECTID out_string
---
> INHERITS
> INHERITS
> INHERITS
> OBJECTID temp
> ASSIGN
> OBJECTID temp
> '.'
> OBJECTID concat
1301,1304c1292,1298
< STR_CONST "\n\n"
< ')'
< ';'
< OBJECTID out_string
---
> OBJECTID cell
> LEXER BUG - UNMATCHED: _
> OBJECTID at
> LEXER BUG - UNMATCHED: _
> OBJECTID next
> LEXER BUG - UNMATCHED: _
> OBJECTID evolution
1306c1300
< STR_CONST "Would you like to choose a background pattern? \n"
---
> OBJECTID position
1308,1311d1301
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Please use lowercase y or n for your answer [n]: "
1314c1304,1307
< OBJECTID ans
---
> INHERITS
> INHERITS
> INHERITS
> OBJECTID position
1316,1318c1309,1311
< OBJECTID in_string
< '('
< ')'
---
> OBJECTID position
> '+'
> INT_CONST 1
1320,1325c1313,1314
< IF
< OBJECTID ans
< '='
< STR_CONST "y"
< THEN
< BOOL_CONST true
---
> INHERITS
> INHERITS
1327,1331d1315
< BOOL_CONST false
< FI
< ';'
< '}'
< ')'
1332a1317,1319
> INHERITS
> INHERITS
> POOL
1334c1321,1327
< '}'
---
> INHERITS
> INHERITS
> OBJECTID population
> LEXER BUG - UNMATCHED: _
> OBJECTID map
> ASSIGN
> OBJECTID temp
1336,1337d1328
< CLASS
< TYPEID Main
1339,1343c1330,1331
< TYPEID CellularAutomaton
< '{'
< OBJECTID cells
< ':'
< TYPEID CellularAutomaton
---
> INHERITS
> OBJECTID self
1345c1333,1402
< OBJECTID main
---
> INHERITS
> ELSE
> '}'
> INHERITS
> ')'
> ')'
> ')'
> ELSE
> '}'
> ';'
> '('
> '*'
> TYPEID This
> FI
> OBJECTID s
> OBJECTID where
> THEN
> OBJECTID background
> OBJECTID pattern
> FI
> OBJECTID s
> OBJECTID detremined
> OBJECTID by
> THEN
> OBJECTID user
> '.'
> TYPEID More
> LOOP
> OBJECTID atterns
> OBJECTID can
> OBJECTID be
> OBJECTID added
> CASE
> OBJECTID long
> CASE
> OBJECTID whoever
> OBJECTID adds
> OBJECTID keeps
> THEN
> OBJECTID board
> OBJECTID either
> LET
> INT_CONST 3
> OBJECTID x5
> ','
> INT_CONST 4
> OBJECTID x5
> ','
> INT_CONST 5
> OBJECTID x5
> ','
> INT_CONST 3
> OBJECTID x7
> ','
> INT_CONST 7
> OBJECTID x4
> ','
> INT_CONST 4
> OBJECTID x4
> OBJECTID with
> THEN
> OBJECTID row
> IF
> OBJECTID irst
> THEN
> OBJECTID column
> '.'
> '*'
> ')'
> OBJECTID option
1349c1406
< TYPEID SELF_TYPE
---
> TYPEID String
1351a1409
> FI
1354,1356d1411
< OBJECTID continue
< ':'
< TYPEID Bool
1358,1360c1413
< '('
< LET
< OBJECTID choice
---
> OBJECTID um
1362,1363c1415,1419
< TYPEID String
< IN
---
> FI
> OBJECTID nt
> FI
> OBJECTID n
> LET
1365,1372c1421,1450
< OBJECTID out_string
< '('
< STR_CONST "Welcome to the Game of Life.\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "There are many initial states to choose from. \n"
---
> LET
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> '('
> STR_CONST "\\nPlease chose a number:\\n\");\n   out_string(\"\\t1: A cross\\n\"); \n   out_string(\"\\t2: A slash from the upper left to lower right\\n\");\n   out_string(\"\\t3: A slash from the upper right to lower left\\n\"); \n   out_string(\"\\t4: An X\\n\"); \n   out_string(\"\\t5: A greater than sign \\n\"); \n   out_string(\"\\t6: A less than sign\\n\"); \n   out_string(\"\\t7: Two greater than signs\\n\"); \n   out_string(\"\\t8: Two less than signs\\n\"); \n   out_string(\"\\t9: A 'V'\\n\"); \n   out_string(\"\\t10: An inverse 'V'\\n\"); \n   out_string(\"\\t11: Numbers 9 and 10 combined\\n\"); \n   out_string(\"\\t12: A full grid\\n\"); \n   out_string(\"\\t13: A 'T'\\n\");\n   out_string(\"\\t14: A plus '+'\\n\");\n   out_string(\"\\t15: A 'W'\\n\");\n   out_string(\"\\t16: An 'M'\\n\");\n   out_string(\"\\t17: An 'E'\\n\");\n   out_string(\"\\t18: A '3'\\n\");\n   out_string(\"\\t19: An 'O'\\n\");\n   out_string(\"\\t20: An '8'\\n\");\n   out_string(\"\\t21: An 'S'\\n\");\n   out_string(\"Your choice => \");\n   num <- in_int();\n   out_string(\"\\n\");\n   if num = 1 then\n    \t\" XX  XXXX XXXX  XX  \"\n   else if num = 2 then\n    \t\"    X   X   X   X   X    \"\n   else if num = 3 then\n    \t\"X     X     X     X     X\"\n   else if num = 4 then\n\t\"X   X X X   X   X X X   X\"\n   else if num = 5 then\n\t\"X     X     X   X   X    \"\n   else if num = 6 then\n\t\"    X   X   X     X     X\"\n   else if num = 7 then\n\t\"X  X  X  XX  X      \"\n   else if num = 8 then\n\t\" X  XX  X  X  X     \"\n   else if num = 9 then\n\t\"X   X X X   X  \"\n   else if num = 10 then\n\t\"  X   X X X   X\"\n   else if num = 11 then\n\t\"X X X X X X X X\"\n   else if num = 12 then\n\t\"XXXXXXXXXXXXXXXXXXXXXXXXX\"\n   else if num = 13 then\n    \t\"XXXXX  X    X    X    X  \"\n   else if num = 14 then\n    \t\"  X    X  XXXXX  X    X  \"\n   else if num = 15 then\n    \t\"X     X X X X   X X  \"\n   else if num = 16 then\n    \t\"  X X   X X X X     X\"\n   else if num = 17 then\n\t\"XXXXX   X   XXXXX   X   XXXX\"\n   else if num = 18 then\n\t\"XXX    X   X  X    X   XXXX \"\n   else if num = 19 then\n\t\" XX X  XX  X XX \"\n   else if num = 20 then\n\t\" XX X  XX  X XX X  XX  X XX \"\n   else if num = 21 then\n\t\" XXXX   X    XX    X   XXXX \"\n   else\n\t\"                         \"\n  fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi;\n    }\n   );\n }\n };\n\n\n\n\n prompt() : Bool { \n {\n  (let ans : String in\n   {\n   out_string(\"Would you like to continue with the next generation? \\n\");\n   out_string(\"Please use lowercase y or n for your answer [y]: \");\n   ans <- in_string();\n   out_string(\"\\n\");\n   if ans = \"n\" then \n\tfalse\n   else\n\ttrue\n   fi;\n   }\n  );\n }\n };\n\n\n prompt2() : Bool { \n  (let ans : String in\n   {\n   out_string(\"\\n\\n\");\n   out_string(\"Would you like to choose a background pattern? \\n\");\n   out_string(\"Please use lowercase y or n for your answer [n]: \");\n   ans <- in_string();\n   if ans = \"y\" then \n\ttrue\n   else\n\tfalse\n   fi;\n   }\n  )\n };\n\n\n};\n\nclass Main inherits CellularAutomaton {\n    cells : CellularAutomaton;\n   \n    main() : SELF_TYPE {\n        {\n\t (let continue : Bool  in\n\t  (let choice : String  in\n\t   {\n\t   out_string("
> TYPEID Welcome
> OBJECTID to
> THEN
> TYPEID Game
> OF
> TYPEID Life
> '.'
> LEXER BUG - UNMATCHED: \
> OBJECTID n
> STR_CONST ");\n\t   out_string("
> TYPEID There
> OBJECTID are
> OBJECTID many
> FI
> OBJECTID nitial
> OBJECTID states
> OBJECTID to
> OBJECTID choose
> IF
> OBJECTID rom
> '.'
> LEXER BUG - UNMATCHED: \
> OBJECTID n
> LEXER BUG - UNMATCHED: "
1374a1453
> LET
1379a1459
> ELSE
1380a1461
> CLASS
1384a1466
> CLASS
1390a1473
> CLASS
1402a1486
> CLASS
1408a1493,1494
> INHERITS
> CLASS
1416a1503,1505
> INHERITS
> INHERITS
> ELSE
1417a1507,1509
> INHERITS
> INHERITS
> INHERITS
1423a1516,1518
> INHERITS
> INHERITS
> INHERITS
1429a1525,1527
> INHERITS
> INHERITS
> ELSE
1431a1530
> ELSE
1434,1435c1533,1539
< BOOL_CONST false
< FI
---
> IF
> OBJECTID alse
> CLASS
> IF
> IF
> INHERITS
> INHERITS
1437a1542,1543
> INHERITS
> ELSE
1438a1545,1546
> INHERITS
> ELSE
1441c1549,1550
< OBJECTID self
---
> CLASS
> OBJECTID elf
1442a1552
> CLASS
1443a1554
> FI
1447a1559
> ELSE
