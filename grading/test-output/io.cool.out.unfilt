#name "./io.cool"
#4 CLASS
#4 TYPEID A
#4 '{'
#6 LET
#6 LET
LEXER BUG - UNMATCHED: '
#6 OBJECTID s
#6 OBJECTID assume
#6 OBJECTID that
#6 OBJECTID we
#6 OBJECTID don
LEXER BUG - UNMATCHED: '
#6 OBJECTID t
#6 OBJECTID want
#6 TYPEID A
#6 OBJECTID to
#6 IN
#6 OBJECTID ot
#6 FI
#6 OBJECTID nherit
#6 IF
#6 OBJECTID rom
#6 FI
#6 TYPEID O
#6 '.'
#8 LET
#8 OBJECTID io
#8 ':'
#8 FI
#8 OF
#8 ASSIGN
#8 IN
#8 OBJECTID ew
#8 FI
#8 TYPEID O
#8 ';'
#10 LET
#10 OBJECTID out_a
#10 '('
#10 ')'
#10 ':'
#10 TYPEID Object
#10 '{'
#10 FI
#10 OBJECTID o
#10 '.'
#10 OBJECTID out_string
#10 '('
LEXER BUG - UNMATCHED: "
#10 TYPEID A
#10 ':'
#10 TYPEID Hello
#10 OBJECTID world
LEXER BUG - UNMATCHED: \
#10 OBJECTID n
LEXER BUG - UNMATCHED: "
#10 ')'
#10 '}'
#10 ';'
#12 '}'
#12 ';'
#15 CLASS
#15 TYPEID B
#15 FI
#15 OBJECTID nherits
#15 TYPEID A
#15 '{'
#17 LET
#17 TYPEID B
#17 OBJECTID does
#17 IN
#17 OBJECTID ot
#17 OBJECTID have
#17 OBJECTID to
#17 OBJECTID an
#17 OBJECTID extra
#17 OBJECTID attribute
#17 ','
#17 OBJECTID since
#17 FI
#17 OBJECTID t
#17 FI
#17 OBJECTID nherits
#17 FI
#17 OF
#17 OBJECTID from
#17 TYPEID A
#17 '.'
#19 LET
#19 OBJECTID out_b
#19 '('
#19 ')'
#19 ':'
#19 TYPEID Object
#19 '{'
#19 FI
#19 OBJECTID o
#19 '.'
#19 OBJECTID out_string
#19 '('
LEXER BUG - UNMATCHED: "
#19 TYPEID B
#19 ':'
#19 TYPEID Hello
#19 OBJECTID world
LEXER BUG - UNMATCHED: \
#19 OBJECTID n
LEXER BUG - UNMATCHED: "
#19 ')'
#19 '}'
#19 ';'
#21 '}'
#21 ';'
#24 CLASS
#24 TYPEID C
#24 FI
#24 OBJECTID nherits
#24 FI
#24 OF
#24 '{'
#26 LET
#26 TYPEID Now
#26 THEN
#26 TYPEID IO
#26 OBJECTID methods
#26 OBJECTID are
#26 OBJECTID part
#26 OF
#26 TYPEID C
#26 '.'
#28 LET
#28 OBJECTID out_c
#28 '('
#28 ')'
#28 ':'
#28 TYPEID Object
#28 '{'
#28 OBJECTID out_string
#28 '('
LEXER BUG - UNMATCHED: "
#28 TYPEID C
#28 ':'
#28 TYPEID Hello
#28 OBJECTID world
LEXER BUG - UNMATCHED: \
#28 OBJECTID n
LEXER BUG - UNMATCHED: "
#28 ')'
#28 '}'
#28 ';'
#30 LET
#30 TYPEID Note
#30 OBJECTID that
#30 OBJECTID out_string
#30 '('
#30 '.'
#30 '.'
#30 '.'
#30 ')'
#30 FI
#30 OBJECTID s
#30 OBJECTID just
#30 OBJECTID a
#30 OBJECTID shorthand
#30 IF
#30 OBJECTID or
#30 OBJECTID self
#30 '.'
#30 OBJECTID out_string
#30 '('
#30 '.'
#30 '.'
#30 '.'
#30 ')'
#32 '}'
#32 ';'
#35 CLASS
#35 TYPEID D
#35 FI
#35 OBJECTID nherits
#35 TYPEID C
#35 '{'
#37 LET
#37 INHERITS
#37 FI
#37 OF
#37 OBJECTID methods
#37 IF
#37 OBJECTID rom
#37 TYPEID C
#37 '.'
#39 LET
#39 OBJECTID out_d
#39 '('
#39 ')'
#39 ':'
#39 TYPEID Object
#39 '{'
#39 OBJECTID out_string
#39 '('
LEXER BUG - UNMATCHED: "
#39 TYPEID D
#39 ':'
#39 TYPEID Hello
#39 OBJECTID world
LEXER BUG - UNMATCHED: \
#39 OBJECTID n
LEXER BUG - UNMATCHED: "
#39 ')'
#39 '}'
#39 ';'
#41 '}'
#41 ';'
#44 CLASS
#44 TYPEID Main
#44 FI
#44 OBJECTID nherits
#44 FI
#44 OF
#44 '{'
#46 LET
#46 TYPEID Same
#46 CASE
#46 CASE
#46 CLASS
#46 TYPEID C
#46 '.'
#48 LET
#48 OBJECTID main
#48 '('
#48 ')'
#48 ':'
#48 TYPEID Object
#48 '{'
#49 CLASS
#49 '{'
#50 '('
#50 NEW
#50 TYPEID A
#50 ')'
#50 '.'
#50 OBJECTID out_a
#50 '('
#50 ')'
#50 ';'
#51 '('
#51 NEW
#51 TYPEID B
#51 ')'
#51 '.'
#51 OBJECTID out_b
#51 '('
#51 ')'
#51 ';'
#52 '('
#52 NEW
#52 TYPEID C
#52 ')'
#52 '.'
#52 OBJECTID out_c
#52 '('
#52 ')'
#52 ';'
#53 '('
#53 NEW
#53 TYPEID D
#53 ')'
#53 '.'
#53 OBJECTID out_d
#53 '('
#53 ')'
#53 ';'
#54 OBJECTID out_string
#54 '('
LEXER BUG - UNMATCHED: "
#54 TYPEID Done
#54 '.'
LEXER BUG - UNMATCHED: \
#54 OBJECTID n
LEXER BUG - UNMATCHED: "
#54 ')'
#54 ';'
#55 CLASS
#55 '}'
#56 LET
#56 '}'
#56 ';'
#58 '}'
#58 ';'
