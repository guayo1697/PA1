CLASS
TYPEID List
FI
OBJECTID nherits
FI
OF
'{'
INHERITS
OBJECTID isNil
'('
')'
':'
TYPEID Bool
'{'
'{'
OBJECTID abort
'('
')'
';'
BOOL_CONST true
';'
'}'
'}'
';'
OBJECTID cons
'('
OBJECTID hd
':'
FI
OBJECTID nt
')'
':'
TYPEID Cons
'{'
FI
'('
LET
IN
OBJECTID ew_cell
':'
TYPEID Cons
ASSIGN
IN
OBJECTID ew
TYPEID Cons
FI
OBJECTID n
OBJECTID new_cell
'.'
OBJECTID init
'('
OBJECTID hd
','
OBJECTID self
')'
FI
')'
'}'
';'
OBJECTID car
'('
')'
':'
FI
OBJECTID nt
'{'
'{'
OBJECTID abort
'('
')'
';'
IN
OBJECTID ew
FI
OBJECTID nt
';'
'}'
'}'
';'
OBJECTID cdr
'('
')'
':'
TYPEID List
'{'
'{'
OBJECTID abort
'('
')'
';'
IN
OBJECTID ew
TYPEID List
';'
'}'
'}'
';'
OBJECTID rev
'('
')'
':'
TYPEID List
'{'
OBJECTID cdr
'('
')'
'}'
';'
OBJECTID sort
'('
')'
':'
TYPEID List
'{'
OBJECTID cdr
'('
')'
'}'
';'
OBJECTID insert
'('
IF
':'
FI
OBJECTID nt
')'
':'
TYPEID List
'{'
OBJECTID cdr
'('
')'
'}'
';'
OBJECTID rcons
'('
IF
':'
FI
OBJECTID nt
')'
':'
TYPEID List
'{'
OBJECTID cdr
'('
')'
'}'
';'
OBJECTID print_list
'('
')'
':'
TYPEID Object
'{'
OBJECTID abort
'('
')'
'}'
';'
'}'
';'
CLASS
TYPEID Cons
FI
OBJECTID nherits
TYPEID List
'{'
OBJECTID xcar
':'
FI
OBJECTID nt
';'
FI
TYPEID We
OBJECTID keep
THEN
OBJECTID car
FI
OBJECTID n
OBJECTID cdr
FI
OBJECTID n
OBJECTID attributes
'.'
OBJECTID xcdr
':'
TYPEID List
';'
TYPEID Because
OBJECTID methods
OBJECTID and
IF
OBJECTID eatures
OBJECTID must
OBJECTID have
OBJECTID different
IN
OBJECTID ames
','
CLASS
OBJECTID we
OBJECTID use
OBJECTID xcar
OBJECTID and
OBJECTID xcdr
IF
OBJECTID or
THEN
OBJECTID attributes
OBJECTID and
OBJECTID reserve
CLASS
OBJECTID cons
OBJECTID and
OBJECTID car
IF
OBJECTID or
THEN
OBJECTID features
'.'
OBJECTID isNil
'('
')'
':'
TYPEID Bool
'{'
IF
OBJECTID alse
'}'
';'
OBJECTID init
'('
OBJECTID hd
':'
FI
OBJECTID nt
','
OBJECTID tl
':'
TYPEID List
')'
':'
TYPEID Cons
'{'
FI
'{'
ELSE
OBJECTID xcar
ASSIGN
OBJECTID hd
';'
ELSE
OBJECTID xcdr
ASSIGN
OBJECTID tl
';'
CLASS
OBJECTID elf
';'
FI
'}'
'}'
';'
FI
OBJECTID car
'('
')'
':'
FI
OBJECTID nt
'{'
OBJECTID xcar
'}'
';'
OBJECTID cdr
'('
')'
':'
TYPEID List
'{'
OBJECTID xcdr
'}'
';'
OBJECTID rev
'('
')'
':'
TYPEID List
'{'
'('
OBJECTID xcdr
'.'
OBJECTID rev
'('
')'
')'
'.'
OBJECTID rcons
'('
OBJECTID xcar
')'
'}'
';'
OBJECTID sort
'('
')'
':'
TYPEID List
'{'
'('
OBJECTID xcdr
'.'
OBJECTID sort
'('
')'
')'
'.'
OBJECTID insert
'('
OBJECTID xcar
')'
'}'
';'
OBJECTID insert
'('
IF
':'
FI
OBJECTID nt
')'
':'
TYPEID List
'{'
IF
FI
'<'
OBJECTID xcar
THEN
'('
NEW
TYPEID Cons
')'
'.'
OBJECTID init
'('
OBJECTID i
','
OBJECTID self
')'
ELSE
'('
NEW
TYPEID Cons
')'
'.'
OBJECTID init
'('
OBJECTID xcar
','
OBJECTID xcdr
'.'
OBJECTID insert
'('
OBJECTID i
')'
')'
FI
'}'
';'
OBJECTID rcons
'('
IF
':'
FI
OBJECTID nt
')'
':'
TYPEID List
'{'
'('
NEW
TYPEID Cons
')'
'.'
OBJECTID init
'('
OBJECTID xcar
','
OBJECTID xcdr
'.'
OBJECTID rcons
'('
OBJECTID i
')'
')'
'}'
';'
OBJECTID print_list
'('
')'
':'
TYPEID Object
'{'
'{'
CLASS
OBJECTID out_int
'('
OBJECTID xcar
')'
';'
CLASS
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
';'
CLASS
OBJECTID xcdr
'.'
OBJECTID print_list
'('
')'
';'
'}'
'}'
';'
'}'
';'
CLASS
IN
OBJECTID il
FI
OBJECTID nherits
TYPEID List
'{'
OBJECTID isNil
'('
')'
':'
TYPEID Bool
'{'
BOOL_CONST true
'}'
';'
INHERITS
OBJECTID rev
'('
')'
':'
TYPEID List
'{'
OBJECTID self
'}'
';'
OBJECTID sort
'('
')'
':'
TYPEID List
'{'
OBJECTID self
'}'
';'
OBJECTID insert
'('
IF
':'
FI
OBJECTID nt
')'
':'
TYPEID List
'{'
OBJECTID rcons
'('
OBJECTID i
')'
'}'
';'
OBJECTID rcons
'('
IF
':'
FI
OBJECTID nt
')'
':'
TYPEID List
'{'
'('
NEW
TYPEID Cons
')'
'.'
OBJECTID init
'('
OBJECTID i
','
OBJECTID self
')'
'}'
';'
OBJECTID print_list
'('
')'
':'
TYPEID Object
'{'
BOOL_CONST true
'}'
';'
'}'
';'
CLASS
TYPEID Main
FI
OBJECTID nherits
FI
OF
'{'
OBJECTID l
':'
TYPEID List
';'
OBJECTID iota
'('
IF
':'
FI
OBJECTID nt
')'
':'
TYPEID List
'{'
ELSE
'{'
OBJECTID l
ASSIGN
IN
OBJECTID ew
IN
OBJECTID il
';'
'('
LET
OBJECTID j
':'
FI
OBJECTID nt
ASSIGN
INT_CONST 0
FI
OBJECTID n
LET
WHILE
OBJECTID j
'<'
FI
POOL
OBJECTID oop
CLASS
'{'
CLASS
FI
OBJECTID l
ASSIGN
'('
NEW
TYPEID Cons
')'
'.'
OBJECTID init
'('
OBJECTID j
','
OBJECTID l
')'
';'
CLASS
FI
OBJECTID j
ASSIGN
OBJECTID j
'+'
INT_CONST 1
';'
CLASS
'}'
LOOP
OBJECTID ool
')'
';'
OBJECTID l
';'
ELSE
'}'
'}'
';'
OBJECTID main
'('
')'
':'
TYPEID Object
'{'
LET
'{'
CLASS
OBJECTID out_string
'('
STR_CONST "How many numbers to sort?"
')'
';'
CLASS
OBJECTID iota
'('
OBJECTID in_int
'('
')'
')'
'.'
OBJECTID rev
'('
')'
'.'
OBJECTID sort
'('
')'
'.'
OBJECTID print_list
'('
')'
';'
LET
'}'
'}'
';'
'}'
';'
ELSE
