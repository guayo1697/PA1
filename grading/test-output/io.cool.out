CLASS
TYPEID A
'{'
LET
LET
LEXER BUG - UNMATCHED: '
OBJECTID s
OBJECTID assume
OBJECTID that
OBJECTID we
OBJECTID don
LEXER BUG - UNMATCHED: '
OBJECTID t
OBJECTID want
TYPEID A
OBJECTID to
IN
OBJECTID ot
FI
OBJECTID nherit
IF
OBJECTID rom
FI
TYPEID O
'.'
LET
OBJECTID io
':'
FI
OF
ASSIGN
IN
OBJECTID ew
FI
TYPEID O
';'
LET
OBJECTID out_a
'('
')'
':'
TYPEID Object
'{'
FI
OBJECTID o
'.'
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
TYPEID A
':'
TYPEID Hello
OBJECTID world
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
'}'
';'
'}'
';'
CLASS
TYPEID B
FI
OBJECTID nherits
TYPEID A
'{'
LET
TYPEID B
OBJECTID does
IN
OBJECTID ot
OBJECTID have
OBJECTID to
OBJECTID an
OBJECTID extra
OBJECTID attribute
','
OBJECTID since
FI
OBJECTID t
FI
OBJECTID nherits
FI
OF
OBJECTID from
TYPEID A
'.'
LET
OBJECTID out_b
'('
')'
':'
TYPEID Object
'{'
FI
OBJECTID o
'.'
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
TYPEID B
':'
TYPEID Hello
OBJECTID world
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
'}'
';'
'}'
';'
CLASS
TYPEID C
FI
OBJECTID nherits
FI
OF
'{'
LET
TYPEID Now
THEN
TYPEID IO
OBJECTID methods
OBJECTID are
OBJECTID part
OF
TYPEID C
'.'
LET
OBJECTID out_c
'('
')'
':'
TYPEID Object
'{'
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
TYPEID C
':'
TYPEID Hello
OBJECTID world
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
'}'
';'
LET
TYPEID Note
OBJECTID that
OBJECTID out_string
'('
'.'
'.'
'.'
')'
FI
OBJECTID s
OBJECTID just
OBJECTID a
OBJECTID shorthand
IF
OBJECTID or
OBJECTID self
'.'
OBJECTID out_string
'('
'.'
'.'
'.'
')'
'}'
';'
CLASS
TYPEID D
FI
OBJECTID nherits
TYPEID C
'{'
LET
INHERITS
FI
OF
OBJECTID methods
IF
OBJECTID rom
TYPEID C
'.'
LET
OBJECTID out_d
'('
')'
':'
TYPEID Object
'{'
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
TYPEID D
':'
TYPEID Hello
OBJECTID world
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
'}'
';'
'}'
';'
CLASS
TYPEID Main
FI
OBJECTID nherits
FI
OF
'{'
LET
TYPEID Same
CASE
CASE
CLASS
TYPEID C
'.'
LET
OBJECTID main
'('
')'
':'
TYPEID Object
'{'
CLASS
'{'
'('
NEW
TYPEID A
')'
'.'
OBJECTID out_a
'('
')'
';'
'('
NEW
TYPEID B
')'
'.'
OBJECTID out_b
'('
')'
';'
'('
NEW
TYPEID C
')'
'.'
OBJECTID out_c
'('
')'
';'
'('
NEW
TYPEID D
')'
'.'
OBJECTID out_d
'('
')'
';'
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
TYPEID Done
'.'
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
';'
CLASS
'}'
LET
'}'
';'
'}'
';'
