CLASS
TYPEID Main
FI
OBJECTID nherits
FI
OF
'{'
ELSE
OBJECTID main
'('
')'
':'
TYPEID SELF_TYPE
'{'
'('
LET
OBJECTID c
':'
TYPEID Complex
ASSIGN
'('
NEW
TYPEID Complex
')'
'.'
OBJECTID init
'('
INT_CONST 1
','
INT_CONST 1
')'
FI
OBJECTID n
ELSE
'{'
INHERITS
OBJECTID trivially
OBJECTID equal
'('
OBJECTID see
TYPEID CoolAid
')'
INHERITS
IF
OBJECTID c
'.'
OBJECTID reflect_X
'('
')'
'='
OBJECTID c
'.'
OBJECTID reflect_0
'('
')'
INHERITS
THEN
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
'='
')'
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
INHERITS
ELSE
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
'='
'('
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
INHERITS
FI
';'
OBJECTID equal
INHERITS
IF
OBJECTID c
'.'
OBJECTID reflect_X
'('
')'
'.'
OBJECTID reflect_Y
'('
')'
'.'
OBJECTID equal
'('
OBJECTID c
'.'
OBJECTID reflect_0
'('
')'
')'
INHERITS
THEN
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
'='
')'
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
INHERITS
ELSE
OBJECTID out_string
'('
LEXER BUG - UNMATCHED: "
'='
'('
LEXER BUG - UNMATCHED: \
OBJECTID n
LEXER BUG - UNMATCHED: "
')'
INHERITS
FI
';'
ELSE
'}'
')'
ELSE
'}'
';'
'}'
';'
CLASS
TYPEID Complex
FI
OBJECTID nherits
FI
OF
'{'
ELSE
OBJECTID x
':'
FI
OBJECTID nt
';'
ELSE
OBJECTID y
':'
FI
OBJECTID nt
';'
ELSE
OBJECTID init
'('
OBJECTID a
':'
FI
OBJECTID nt
','
OBJECTID b
':'
FI
OBJECTID nt
')'
':'
TYPEID Complex
'{'
'{'
ELSE
OBJECTID x
'='
OBJECTID a
';'
ELSE
OBJECTID y
'='
OBJECTID b
';'
CLASS
OBJECTID elf
';'
'}'
ELSE
'}'
';'
ELSE
OBJECTID print
'('
')'
':'
TYPEID Object
'{'
IF
OBJECTID y
'='
INT_CONST 0
THEN
OBJECTID out_int
'('
OBJECTID x
')'
ELSE
OBJECTID out_int
'('
OBJECTID x
')'
'.'
OBJECTID out_string
'('
STR_CONST "+"
')'
'.'
OBJECTID out_int
'('
OBJECTID y
')'
'.'
OBJECTID out_string
'('
STR_CONST "I"
')'
FI
ELSE
'}'
';'
ELSE
OBJECTID reflect_0
'('
')'
':'
TYPEID Complex
'{'
'{'
ELSE
OBJECTID x
'='
'~'
OBJECTID x
';'
ELSE
OBJECTID y
'='
'~'
OBJECTID y
';'
CLASS
OBJECTID elf
';'
'}'
ELSE
'}'
';'
ELSE
OBJECTID reflect_X
'('
')'
':'
TYPEID Complex
'{'
'{'
ELSE
OBJECTID y
'='
'~'
OBJECTID y
';'
CLASS
OBJECTID elf
';'
'}'
ELSE
'}'
';'
ELSE
OBJECTID reflect_Y
'('
')'
':'
TYPEID Complex
'{'
'{'
ELSE
OBJECTID x
'='
'~'
OBJECTID x
';'
CLASS
OBJECTID elf
';'
'}'
ELSE
'}'
';'
WHILE
OBJECTID qual
'('
OBJECTID d
':'
TYPEID Complex
')'
':'
TYPEID Bool
'{'
IF
OBJECTID x
'='
OBJECTID d
'.'
OBJECTID x_value
'('
')'
THEN
ELSE
IF
OBJECTID y
'='
OBJECTID d
'.'
OBJECTID y_value
'('
')'
ELSE
THEN
BOOL_CONST true
WHILE
OBJECTID lse
IF
OBJECTID alse
ELSE
FI
ELSE
IF
OBJECTID alse
FI
ELSE
'}'
';'
ELSE
OBJECTID x_value
'('
')'
':'
FI
OBJECTID nt
'{'
OBJECTID x
ELSE
'}'
';'
ELSE
OBJECTID y_value
'('
')'
':'
FI
OBJECTID nt
'{'
OBJECTID y
ELSE
'}'
';'
'}'
';'
